//沙盒主目录
    NSString *homePath = NSHomeDirectory();
    NSLog(@"homePath,%@",homePath);
    
    //Document目录
    NSArray *documentArray = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);
    NSMutableString *documentPath = [documentArray objectAtIndex:0];
    NSArray *testArray = [NSArray arrayWithObjects:@"hello , world",@"你好，世界" ,nil];
    [testArray writeToFile:[documentPath stringByAppendingPathComponent:@"document1.txt"]atomically:YES];
    NSLog(@"documentPath,%@",documentPath);
    
    //Library目录
    NSArray *library = NSSearchPathForDirectoriesInDomains(NSLibraryDirectory, NSUserDomainMask, YES);
    NSString *libraryPath = [library objectAtIndex:0];
    NSLog(@"libraryPath,%@",libraryPath);
    [testArray writeToFile:[libraryPath stringByAppendingPathComponent:@"document2.txt"]atomically:YES];
    
    //Library->cache目录
    NSArray *cacheArray = NSSearchPathForDirectoriesInDomains(NSCachesDirectory, NSUserDomainMask,YES);
    NSString *cachePath = [cacheArray objectAtIndex:0];
    [testArray writeToFile:[cachePath stringByAppendingPathComponent:@"document3.txt"]atomically:YES];
    NSLog(@"cachePath,%@",cachePath);
    
    
    //写文件到指定路径
    NSString *tempPath = NSTemporaryDirectory();
    NSLog(@"tempPath,%@",tempPath);
    [testArray writeToFile:[tempPath stringByAppendingPathComponent:@"document4.txt"]atomically:YES];
    
    //从指定路径读取文件
    
    NSArray *cacheFileArray = [[NSArray alloc]initWithContentsOfFile:[cachePath stringByAppendingPathComponent:@"document3.txt"]];
    NSLog(@"cacheFileArray , %@",cacheFileArray);
    
    //NSFileManager 管理文件
    //创建文件夹
    NSFileManager *fileManager = [NSFileManager defaultManager];
    NSString *fileDirectoryPath = [documentPath stringByAppendingPathComponent:@"test"];
    [fileManager createDirectoryAtPath:fileDirectoryPath withIntermediateDirectories:YES attributes:nil error:nil];
    //创建文件
    NSString *testStr = @"10万个why？";
    [fileManager createFileAtPath:[fileDirectoryPath stringByAppendingPathComponent:@"why.txt"] contents:[testStr dataUsingEncoding:NSUTF8StringEncoding] attributes:nil];
    
    [fileManager createFileAtPath:[fileDirectoryPath stringByAppendingPathComponent:@"why1.txt"] contents:[testStr dataUsingEncoding:NSUTF8StringEncoding] attributes:nil];
    
    [fileManager createFileAtPath:[fileDirectoryPath stringByAppendingPathComponent:@"why2.txt"] contents:[testStr dataUsingEncoding:NSUTF8StringEncoding] attributes:nil];
    
    //获取指定文件夹里的所有文件名
    
    NSArray *fileNamesArray = [fileManager subpathsOfDirectoryAtPath:fileDirectoryPath error:nil];
    NSLog(@"方法一：test 文件夹里的文件名：%@",fileNamesArray);
    
    fileNamesArray = [fileManager subpathsAtPath:fileDirectoryPath];
    
    NSLog(@"方法二：test 文件夹里的文件名：%@",fileNamesArray);
    
    //更改到当前目录
    [fileManager changeCurrentDirectoryPath:libraryPath];
    NSString *fileName = @"why.txt";
    NSArray *currentArray = [[NSArray alloc] initWithObjects:@"current1",@"current2",@"current3", nil];
    [fileManager createFileAtPath:fileName contents:currentArray attributes:nil];
    
    //删除当前目录下的某个文件
    
    [fileManager removeItemAtPath:fileName error:nil];
    
    
    //混合写数据
    NSMutableData *myData = [[NSMutableData alloc] init];
    int dataInt = 6666;
    float dataFloat = 88.88;
    NSString *myStr = @"testString";
    
    [myData appendData:[myStr dataUsingEncoding:NSUTF8StringEncoding]];
    [myData appendBytes:&dataInt length:sizeof(dataInt)];
    [myData appendBytes:&dataFloat length:sizeof(dataFloat)];
    
    [myData writeToFile:[fileDirectoryPath stringByAppendingPathComponent:@"why.txt"] atomically:YES];
    
    //混合读数据
    
    int intData;
    float floatData = 0.0;
    NSString *strData;
    
    NSData *dataOut = [NSData dataWithContentsOfFile:[fileDirectoryPath stringByAppendingPathComponent:@"why.txt"]];
    
    
    strData = [[NSString alloc] initWithData:[dataOut subdataWithRange:NSMakeRange(0, [myStr length])] encoding:NSUTF8StringEncoding];
    [dataOut getBytes:&intData range:NSMakeRange([myStr length], sizeof(intData))];
    [dataOut getBytes:&floatData range:NSMakeRange([myStr length] + sizeof(intData),sizeof(floatData))];
    NSLog(@"strData:%@ ,intData:%d ,floatData:%f",strData,intData,floatData);
